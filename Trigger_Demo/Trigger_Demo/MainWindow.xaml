<Window x:Class="Trigger_Demo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Trigger_Demo"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <Style TargetType="Rectangle">
            
            <Setter Property="Fill" Value="Linen"/>
            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="DarkBlue"/>
                </Trigger>
                <DataTrigger Binding="{Binding ElementName=textBoxInhalt,Path=Text}" Value="geheim">
                    <Setter Property="Fill" Value="LightYellow"/>
                </DataTrigger>
            </Style.Triggers>
            
        </Style>
    </Window.Resources>
    
    <Grid>
        <Rectangle HorizontalAlignment="Left" Height="100" Margin="10,10,0,0" Stroke="Black" VerticalAlignment="Top" Width="100"/>
        <TextBox x:Name="textBoxInhalt" HorizontalAlignment="Left" Height="22" Margin="140,10,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="170"/>
        
        
        
        <CheckBox Content="CheckBox" HorizontalAlignment="Left" Margin="180,70,0,0" VerticalAlignment="Top" Width="144" Style="{DynamicResource SpecialCheckBox}">
            <CheckBox.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
                <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
                <Style x:Key="OptionMarkFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
                <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
                <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
                <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
                <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
                <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
                <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
                <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
                <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
                <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
                <Style x:Key="SpecialCheckBox" TargetType="{x:Type CheckBox}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid x:Name="markGrid">
                                            <Image x:Name="optionMark" Source="Images\image.png" Height="20" Width="20" Margin="1" Opacity="0" Stretch="Fill"/>
                                            <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                        </Grid>
                                    </Border>
                                    <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Button ToolTip="Klick mich :)" ToolTipService.ShowDuration="10000" Content="Button" HorizontalAlignment="Left" Margin="-125,66,0,-41" VerticalAlignment="Top" Width="75" Style="{DynamicResource ButtonStyle1}">
                                        <Button.Resources>
                                            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                                            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                                            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                                            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                                            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                                            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                                            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                                            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                                            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                                            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Padding" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsDefaulted" Value="true">
                                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="true">
                                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="true">
                                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="false">
                                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasContent" Value="true">
                                        <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                        <Setter Property="Padding" Value="4,-1,0,0"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                        <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                        <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                        <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="true">
                                        <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                        <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="{x:Null}">
                                        <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                        <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </CheckBox.Resources>
        </CheckBox>

    </Grid>
</Window>
